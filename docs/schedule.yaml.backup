paths:
  /schedule/group:
    get:
      tags:
        - Schedule Management
      summary: Get all group schedules
      description: Retrieve all group schedules with pagination and search
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of items per page
        - in: query
          name: search
          schema:
            type: string
          description: Search by class name
        - in: query
          name: date
          schema:
            type: string
            format: date
          description: Filter by specific date (YYYY-MM-DD)
      responses:
        '200':
          description: Group schedules retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          schedules:
                            type: array
                            items:
                              $ref: '#/components/schemas/GroupSchedule'
                          pagination:
                            $ref: '#/components/schemas/PaginationInfo'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - Schedule Management
      summary: Create new group schedule
      description: Create a new group schedule (Admin only)
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateGroupScheduleRequest'
      responses:
        '201':
          description: Group schedule created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/GroupSchedule'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /schedule/group/{id}:
    get:
      tags:
        - Schedule Management
      summary: Get group schedule by ID
      description: Retrieve a specific group schedule by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Schedule ID
      responses:
        '200':
          description: Group schedule retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/GroupSchedule'
        '404':
          description: Group schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Schedule Management
      summary: Update group schedule
      description: Update a group schedule by ID (Admin only)
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Schedule ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateGroupScheduleRequest'
      responses:
        '200':
          description: Group schedule updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/GroupSchedule'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Group schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Schedule Management
      summary: Delete group schedule
      description: Delete a group schedule by ID (Admin only)
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Schedule ID
      responses:
        '200':
          description: Group schedule deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Group schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    # Group Schedule Request Schemas
    CreateGroupScheduleRequest:
      type: object
      required:
        - class_id
        - trainer_id
        - pax
        - date_start
        - time_start
        - time_end
        - booking_deadline_hour
        - waitlist_lock_minutes
        - min_signup
        - cancel_buffer_minutes
      properties:
        class_id:
          type: string
          format: uuid
          description: Class ID
        trainer_id:
          type: string
          format: uuid
          description: Trainer ID
        pax:
          type: integer
          minimum: 1
          maximum: 50
          description: Maximum number of participants
        date_start:
          type: string
          format: date
          description: Start date (YYYY-MM-DD)
        time_start:
          type: string
          pattern: '^([01]?[0-9]|2[0-3]):[0-5][0-9]$'
          description: Start time (HH:MM)
        time_end:
          type: string
          pattern: '^([01]?[0-9]|2[0-3]):[0-5][0-9]$'
          description: End time (HH:MM)
        repeat_type:
          type: string
          enum: [none, weekly]
          default: none
          description: Repeat type for the schedule
        schedule_until:
          type: string
          format: date
          description: End date for repeated schedules (YYYY-MM-DD) - Required if repeat_type is weekly
        booking_deadline_hour:
          type: integer
          minimum: 0
          maximum: 72
          description: Hours before class starts that students must book by
        waitlist_lock_minutes:
          type: integer
          minimum: 0
          maximum: 480
          description: Minutes before class start to auto-add waitlisted students
        min_signup:
          type: integer
          minimum: 1
          description: Minimum number of students required for class to run
        cancel_buffer_minutes:
          type: integer
          minimum: 0
          maximum: 480
          description: Minutes before class to auto-cancel if minimum not met
        picture:
          type: string
          format: binary
          description: Schedule picture (JPG, PNG, GIF, WebP, max 5MB) - Optional

    UpdateGroupScheduleRequest:
      type: object
      properties:
        class_id:
          type: string
          format: uuid
          description: Class ID
        trainer_id:
          type: string
          format: uuid
          description: Trainer ID
        pax:
          type: integer
          minimum: 1
          maximum: 50
          description: Maximum number of participants
        date_start:
          type: string
          format: date
          description: Start date (YYYY-MM-DD)
        time_start:
          type: string
          pattern: '^([01]?[0-9]|2[0-3]):[0-5][0-9]$'
          description: Start time (HH:MM)
        time_end:
          type: string
          pattern: '^([01]?[0-9]|2[0-3]):[0-5][0-9]$'
          description: End time (HH:MM)
        repeat_type:
          type: string
          enum: [none, weekly]
          description: Repeat type for the schedule
        schedule_until:
          type: string
          format: date
          description: End date for repeated schedules (YYYY-MM-DD) - Required if repeat_type is weekly
        booking_deadline_hour:
          type: integer
          minimum: 0
          maximum: 72
          description: Hours before class starts that students must book by
        waitlist_lock_minutes:
          type: integer
          minimum: 0
          maximum: 480
          description: Minutes before class start to auto-add waitlisted students
        min_signup:
          type: integer
          minimum: 1
          description: Minimum number of students required for class to run
        cancel_buffer_minutes:
          type: integer
          minimum: 0
          maximum: 480
          description: Minutes before class to auto-cancel if minimum not met
        picture:
          type: string
          format: binary
          description: Schedule picture (JPG, PNG, GIF, WebP, max 5MB) - Optional

    # Group Schedule Response Schema
    GroupSchedule:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Schedule ID
        class_id:
          type: string
          format: uuid
          description: Class ID
        trainer_id:
          type: string
          format: uuid
          description: Trainer ID
        pax:
          type: integer
          description: Maximum number of participants
        type:
          type: string
          enum: [group, semi_private, private]
          description: Schedule type
        date_start:
          type: string
          format: date
          description: Start date
        time_start:
          type: string
          description: Start time
        time_end:
          type: string
          description: End time
        repeat_type:
          type: string
          enum: [none, weekly]
          description: Repeat type
        schedule_until:
          type: string
          format: date
          nullable: true
          description: End date for repeated schedules
        booking_deadline_hour:
          type: integer
          description: Hours before class starts that students must book by
        waitlist_lock_minutes:
          type: integer
          description: Minutes before class start to auto-add waitlisted students
        min_signup:
          type: integer
          description: Minimum number of students required for class to run
        cancel_buffer_minutes:
          type: integer
          description: Minutes before class to auto-cancel if minimum not met
        picture:
          type: string
          nullable: true
          description: Schedule picture filename
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
        Class:
          $ref: '#/components/schemas/Class'
        Trainer:
          $ref: '#/components/schemas/Trainer'

    # Class Schema (for association)
    Class:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Class ID
        name:
          type: string
          description: Class name
        description:
          type: string
          description: Class description

    # Trainer Schema (for association)
    Trainer:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Trainer ID
        name:
          type: string
          description: Trainer name
        email:
          type: string
          format: email
          description: Trainer email

/schedule/semi-private:
    get:
      tags:
        - Schedule Management
      summary: Get all semi-private schedules
      description: Retrieve all semi-private schedules with pagination and search
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
          description: Number of items per page
        - name: search
          in: query
          schema:
            type: string
          description: Search by class name
        - name: date
          in: query
          schema:
            type: string
            format: date
          description: Filter by specific date
      responses:
        '200':
          description: Semi-private schedules retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Semi-private schedules retrieved successfully
                  data:
                    type: object
                    properties:
                      schedules:
                        type: array
                        items:
                          $ref: '#/components/schemas/GroupSchedule'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - Schedule Management
      summary: Create new semi-private schedule
      description: Create a new semi-private schedule (admin only)
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateSemiPrivateScheduleRequest'
      responses:
        '201':
          description: Semi-private schedule created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Semi-private schedule created successfully (14 schedules generated)
                  data:
                    type: object
                    properties:
                      schedule:
                        $ref: '#/components/schemas/GroupSchedule'
                      totalSchedules:
                        type: integer
                        example: 14
                      repeatType:
                        type: string
                        example: weekly
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

/schedule/semi-private/{id}:
    get:
      tags:
        - Schedule Management
      summary: Get semi-private schedule by ID
      description: Retrieve a specific semi-private schedule by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Schedule ID
      responses:
        '200':
          description: Semi-private schedule retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Semi-private schedule retrieved successfully
                  data:
                    $ref: '#/components/schemas/GroupSchedule'
        '404':
          description: Schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Schedule Management
      summary: Update semi-private schedule
      description: Update an existing semi-private schedule (admin only)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Schedule ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateSemiPrivateScheduleRequest'
      responses:
        '200':
          description: Semi-private schedule updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Semi-private schedule updated successfully
                  data:
                    $ref: '#/components/schemas/GroupSchedule'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Schedule Management
      summary: Delete semi-private schedule
      description: Delete a semi-private schedule (admin only)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Schedule ID
      responses:
        '200':
          description: Semi-private schedule deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Semi-private schedule deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

/schedule/private:
    get:
      tags:
        - Schedule Management
      summary: Get all private schedules
      description: Retrieve all private schedules with pagination and search
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
          description: Number of items per page
        - name: search
          in: query
          schema:
            type: string
          description: Search by class name
        - name: date
          in: query
          schema:
            type: string
            format: date
          description: Filter by specific date
      responses:
        '200':
          description: Private schedules retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Private schedules retrieved successfully
                  data:
                    type: object
                    properties:
                      schedules:
                        type: array
                        items:
                          $ref: '#/components/schemas/PrivateSchedule'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - Schedule Management
      summary: Create new private schedule with auto booking
      description: Create a new private schedule with automatic booking for assigned member (admin only)
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreatePrivateScheduleRequest'
      responses:
        '201':
          description: Private schedule created successfully with auto booking
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Private schedule created successfully (14 schedules generated)
                  data:
                    type: object
                    properties:
                      schedule:
                        $ref: '#/components/schemas/PrivateSchedule'
                      totalSchedules:
                        type: integer
                        example: 14
                      totalBookings:
                        type: integer
                        example: 14
                      repeatType:
                        type: string
                        example: weekly
                      assignedMember:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          full_name:
                            type: string
                          email:
                            type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

/schedule/private/{id}:
    get:
      tags:
        - Schedule Management
      summary: Get private schedule by ID
      description: Retrieve a specific private schedule by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Schedule ID
      responses:
        '200':
          description: Private schedule retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Private schedule retrieved successfully
                  data:
                    $ref: '#/components/schemas/PrivateSchedule'
        '404':
          description: Schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Schedule Management
      summary: Update private schedule
      description: Update an existing private schedule (admin only)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Schedule ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdatePrivateScheduleRequest'
      responses:
        '200':
          description: Private schedule updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Private schedule updated successfully
                  data:
                    $ref: '#/components/schemas/PrivateSchedule'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Schedule Management
      summary: Delete private schedule
      description: Delete a private schedule and its associated bookings (admin only)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Schedule ID
      responses:
        '200':
          description: Private schedule deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Private schedule deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse' 