openapi: 3.0.0
info:
  title: Blog API
  description: API untuk mengelola blog dengan fitur slug
  version: 1.0.0

paths:
  /api/blogs:
    get:
      summary: Mendapatkan semua blog
      description: Mendapatkan daftar semua blog dengan pagination dan search
      tags:
        - Blog
      parameters:
        - name: page
          in: query
          description: Nomor halaman (default: 1)
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Jumlah item per halaman (default: 10)
          required: false
          schema:
            type: integer
            default: 10
        - name: search
          in: query
          description: Kata kunci pencarian (title, content, atau slug)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Berhasil mendapatkan daftar blog
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Blogs retrieved successfully"
                  data:
                    type: object
                    properties:
                      blogs:
                        type: array
                        items:
                          $ref: '#/components/schemas/BlogSummary'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '500':
          $ref: './base.yaml#/components/responses/InternalServerError'

    post:
      summary: Membuat blog baru
      description: Membuat blog baru dengan slug otomatis
      tags:
        - Blog
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
                - content
              properties:
                title:
                  type: string
                  description: Judul blog
                  minLength: 3
                  maxLength: 255
                content:
                  type: string
                  description: Konten blog (HTML/JSON dari editor)
                  minLength: 10
                  maxLength: 10000
                picture:
                  type: string
                  format: binary
                  description: Gambar blog
      responses:
        '201':
          description: Blog berhasil dibuat
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Blog created successfully"
                  data:
                    $ref: '#/components/schemas/Blog'
        '400':
          $ref: './base.yaml#/components/responses/BadRequest'
        '401':
          $ref: './base.yaml#/components/responses/Unauthorized'
        '403':
          $ref: './base.yaml#/components/responses/Forbidden'
        '500':
          $ref: './base.yaml#/components/responses/InternalServerError'

  /api/blogs/slug/{slug}:
    get:
      summary: Mendapatkan blog berdasarkan slug
      description: Mendapatkan detail blog berdasarkan slug (SEO-friendly URL)
      tags:
        - Blog
      parameters:
        - name: slug
          in: path
          description: Slug blog
          required: true
          schema:
            type: string
            minLength: 3
            maxLength: 255
      responses:
        '200':
          description: Berhasil mendapatkan detail blog
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Blog retrieved successfully"
                  data:
                    $ref: '#/components/schemas/Blog'
        '404':
          $ref: './base.yaml#/components/responses/NotFound'
        '500':
          $ref: './base.yaml#/components/responses/InternalServerError'

  /api/blogs/{id}:
    get:
      summary: Mendapatkan blog berdasarkan ID
      description: Mendapatkan detail blog berdasarkan UUID
      tags:
        - Blog
      parameters:
        - name: id
          in: path
          description: UUID blog
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Berhasil mendapatkan detail blog
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Blog retrieved successfully"
                  data:
                    $ref: '#/components/schemas/Blog'
        '404':
          $ref: './base.yaml#/components/responses/NotFound'
        '500':
          $ref: './base.yaml#/components/responses/InternalServerError'

    put:
      summary: Mengupdate blog
      description: Mengupdate blog berdasarkan ID
      tags:
        - Blog
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: UUID blog
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Judul blog
                  minLength: 3
                  maxLength: 255
                content:
                  type: string
                  description: Konten blog (HTML/JSON dari editor)
                  minLength: 10
                  maxLength: 10000
                picture:
                  type: string
                  format: binary
                  description: Gambar blog
      responses:
        '200':
          description: Blog berhasil diupdate
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Blog updated successfully"
                  data:
                    $ref: '#/components/schemas/Blog'
        '400':
          $ref: './base.yaml#/components/responses/BadRequest'
        '401':
          $ref: './base.yaml#/components/responses/Unauthorized'
        '403':
          $ref: './base.yaml#/components/responses/Forbidden'
        '404':
          $ref: './base.yaml#/components/responses/NotFound'
        '500':
          $ref: './base.yaml#/components/responses/InternalServerError'

    delete:
      summary: Menghapus blog
      description: Menghapus blog berdasarkan ID
      tags:
        - Blog
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: UUID blog
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Blog berhasil dihapus
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Blog deleted successfully"
        '401':
          $ref: './base.yaml#/components/responses/Unauthorized'
        '403':
          $ref: './base.yaml#/components/responses/Forbidden'
        '404':
          $ref: './base.yaml#/components/responses/NotFound'
        '500':
          $ref: './base.yaml#/components/responses/InternalServerError'

components:
  schemas:
    Blog:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: UUID blog
        title:
          type: string
          description: Judul blog
          minLength: 3
          maxLength: 255
        slug:
          type: string
          description: Slug untuk URL SEO-friendly
          minLength: 3
          maxLength: 255
        picture:
          type: string
          nullable: true
          description: Nama file gambar blog
        content:
          type: string
          description: Konten blog (HTML/JSON dari editor)
          minLength: 10
          maxLength: 10000
        createdAt:
          type: string
          format: date-time
          description: Waktu pembuatan
        updatedAt:
          type: string
          format: date-time
          description: Waktu terakhir diupdate
      required:
        - id
        - title
        - slug
        - content
        - createdAt
        - updatedAt

    BlogSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: UUID blog
        title:
          type: string
          description: Judul blog
        slug:
          type: string
          description: Slug untuk URL SEO-friendly
        picture:
          type: string
          nullable: true
          description: Nama file gambar blog
        createdAt:
          type: string
          format: date-time
          description: Waktu pembuatan
        updatedAt:
          type: string
          format: date-time
          description: Waktu terakhir diupdate
      required:
        - id
        - title
        - slug
        - createdAt
        - updatedAt

    Pagination:
      type: object
      properties:
        currentPage:
          type: integer
          description: Halaman saat ini
        totalPages:
          type: integer
          description: Total halaman
        totalItems:
          type: integer
          description: Total item
        itemsPerPage:
          type: integer
          description: Item per halaman
      required:
        - currentPage
        - totalPages
        - totalItems
        - itemsPerPage 