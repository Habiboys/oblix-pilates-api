paths:
  /booking:
    post:
      tags:
        - Booking Management
      summary: Create booking for authenticated user
      description: Create a new booking for the authenticated user. System will automatically validate session availability and select appropriate package based on priority (bonus > promo > first_trial > membership).
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - schedule_id
              properties:
                schedule_id:
                  type: string
                  format: uuid
                  description: ID of the schedule to book
                  example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '201':
          description: Booking created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Booking berhasil dibuat
                  data:
                    type: object
                    properties:
                      booking_id:
                        type: string
                        format: uuid
                        example: "123e4567-e89b-12d3-a456-426614174000"
                      status:
                        type: string
                        enum: [signup, waiting_list]
                        example: "signup"
                      schedule:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            example: "123e4567-e89b-12d3-a456-426614174001"
                          date:
                            type: string
                            format: date
                            example: "2024-01-20"
                          time:
                            type: string
                            example: "09:00:00 - 10:00:00"
                          class:
                            type: string
                            example: "Pilates Mat"
                          trainer:
                            type: string
                            example: "Sarah Johnson"
                      package:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            example: "123e4567-e89b-12d3-a456-426614174002"
                          name:
                            type: string
                            example: "Monthly Membership"
                          type:
                            type: string
                            enum: [membership, first_trial, promo, bonus]
                            example: "membership"
                      notes:
                        type: string
                        example: "User booking"
                      created_at:
                        type: string
                        format: date-time
                        example: "2024-01-15T10:30:00Z"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Anda tidak memiliki jatah sesi yang cukup
                  data:
                    type: object
                    properties:
                      required_sessions:
                        type: integer
                        example: 1
                      available_sessions:
                        type: integer
                        example: 0
                      deficit:
                        type: integer
                        example: 1
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /booking/{id}/cancel:
    put:
      tags:
        - Booking Management
      summary: Cancel booking for authenticated user
      description: Allow authenticated user to cancel their own booking
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the booking to cancel
          required: true
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174001"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  maxLength: 500
                  description: Optional reason for cancellation
                  example: "Cannot attend due to emergency"
      responses:
        '200':
          description: Booking cancelled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Booking berhasil dibatalkan
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        example: "123e4567-e89b-12d3-a456-426614174001"
                      status:
                        type: string
                        enum: [cancelled]
                        example: "cancelled"
                      cancelled_at:
                        type: string
                        format: date-time
                        example: "2024-01-15T10:30:00Z"
                      promoted_from_waitlist:
                        type: object
                        nullable: true
                        description: Information about booking promoted from waitlist
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Tidak dapat cancel booking. Batas waktu cancel adalah 120 menit sebelum kelas dimulai.
                  data:
                    type: object
                    properties:
                      schedule_time:
                        type: string
                        format: date-time
                        example: "2024-01-20T09:00:00Z"
                      cancel_deadline:
                        type: string
                        format: date-time
                        example: "2024-01-20T07:00:00Z"
                      current_time:
                        type: string
                        format: date-time
                        example: "2024-01-20T08:30:00Z"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /booking/{id}/attendance:
    put:
      tags:
        - Booking Management
      summary: Update booking attendance
      description: Update attendance status for a specific booking
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the booking
          required: true
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - attendance
              properties:
                attendance:
                  type: string
                  enum: [present, absent, late]
                  description: Attendance status
                  example: "present"
                notes:
                  type: string
                  maxLength: 500
                  description: Optional notes for the attendance
                  example: "Hadir tepat waktu"
      responses:
        '200':
          description: Attendance updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Attendance updated successfully
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        example: "123e4567-e89b-12d3-a456-426614174001"
                      attendance:
                        type: string
                        enum: [present, absent, late]
                        example: "present"
                      notes:
                        type: string
                        nullable: true
                        example: "Hadir tepat waktu"
                      updated_at:
                        type: string
                        format: date-time
                        example: "2024-01-15T07:00:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /booking/schedule/{schedule_id}/attendance:
    put:
      tags:
        - Booking Management
      summary: Update attendance for all bookings in a schedule
      description: Update attendance status for all members who booked a specific schedule. Useful for bulk attendance marking.
      security:
        - BearerAuth: []
      parameters:
        - name: schedule_id
          in: path
          description: ID of the schedule
          required: true
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - attendances
              properties:
                attendances:
                  type: array
                  description: Array of attendance data for each booking
                  minItems: 1
                  items:
                    type: object
                    required:
                      - booking_id
                      - attendance
                    properties:
                      booking_id:
                        type: string
                        format: uuid
                        description: ID of the booking
                        example: "123e4567-e89b-12d3-a456-426614174001"
                      attendance:
                        type: string
                        enum: [present, absent, late]
                        description: Attendance status
                        example: "present"
                      notes:
                        type: string
                        maxLength: 500
                        description: Optional notes for the attendance
                        example: "Hadir tepat waktu"
      responses:
        '200':
          description: Schedule attendance updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Schedule attendance updated successfully
                  data:
                    type: object
                    properties:
                      schedule_id:
                        type: string
                        format: uuid
                        example: "123e4567-e89b-12d3-a456-426614174000"
                      schedule_info:
                        type: object
                        properties:
                          class_name:
                            type: string
                            example: "Pilates Basic"
                          trainer_name:
                            type: string
                            example: "Sarah Johnson"
                          date:
                            type: string
                            format: date
                            example: "2024-01-15"
                          time:
                            type: string
                            format: time
                            example: "07:00"
                      total_bookings:
                        type: integer
                        description: Total number of bookings updated
                        example: 5
                      updated_bookings:
                        type: array
                        description: List of updated bookings with attendance
                        items:
                          type: object
                          properties:
                            booking_id:
                              type: string
                              format: uuid
                              example: "123e4567-e89b-12d3-a456-426614174001"
                            member_id:
                              type: string
                              format: uuid
                              example: "123e4567-e89b-12d3-a456-426614174002"
                            member_name:
                              type: string
                              example: "John Doe"
                            attendance:
                              type: string
                              enum: [present, absent, late]
                              example: "present"
                            notes:
                              type: string
                              nullable: true
                              example: "Hadir tepat waktu"
                            updated_at:
                              type: string
                              format: date-time
                              example: "2024-01-15T07:00:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Schedule or bookings not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Schedule not found
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    BookingResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        schedule_id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174001"
        member_id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174002"
        package_id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174003"
      
        status:
          type: string
          enum: [signup, waiting_list, cancelled]
          example: "signup"
        attendance:
          type: string
          enum: [present, absent, late]
          description: Attendance status (default present)
          example: "present"
        notes:
          type: string
          example: "Booking for group class"
        createdAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        Member:
          $ref: '#/components/schemas/MemberBasic'
        Schedule:
          $ref: '#/components/schemas/ScheduleBasic'
        Package:
          $ref: '#/components/schemas/PackageBasic'

    MemberBasic:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174002"
        full_name:
          type: string
          example: "John Doe"
        username:
          type: string
          example: "johndoe"
        member_code:
          type: string
          example: "MBR1234567890"

    ScheduleBasic:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174001"
        date_start:
          type: string
          format: date
          example: "2024-01-20"
        time_start:
          type: string
          example: "09:00:00"
        time_end:
          type: string
          example: "10:00:00"
        type:
          type: string
          enum: [group, semi_private, private]
          example: "group"
        Class:
          $ref: '#/components/schemas/ClassBasic'
        Trainer:
          $ref: '#/components/schemas/TrainerBasic'

    ClassBasic:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174004"
        class_name:
          type: string
          example: "Pilates Mat"
        color_sign:
          type: string
          example: "#FF5733"

    TrainerBasic:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174005"
        title:
          type: string
          example: "Senior Pilates Instructor"
        picture:
          type: string
          example: "trainer1.jpg"

    PackageBasic:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174003"
        name:
          type: string
          example: "Monthly Membership"
        type:
          type: string
          enum: [membership, first_trial, promo, bonus]
          example: "membership"