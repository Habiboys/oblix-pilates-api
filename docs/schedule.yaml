paths:
  /schedule/group:
    get:
      tags:
        - Schedule Management
      summary: Get all group schedules
      description: Retrieve all group schedules with pagination and search
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of items per page
        - in: query
          name: search
          schema:
            type: string
          description: Search by class name
        - in: query
          name: date
          schema:
            type: string
            format: date
          description: Filter by specific date (YYYY-MM-DD)
      responses:
        '200':
          description: Group schedules retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          schedules:
                            type: array
                            items:
                              $ref: '#/components/schemas/GroupSchedule'
                          pagination:
                            $ref: '#/components/schemas/PaginationInfo'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - Schedule Management
      summary: Create new group schedule
      description: Create a new group schedule (Admin only)
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateGroupScheduleRequest'
      responses:
        '201':
          description: Group schedule created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          schedule:
                            $ref: '#/components/schemas/GroupSchedule'
                          totalSchedules:
                            type: integer
                            example: 14
                          repeatType:
                            type: string
                            example: weekly
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /schedule/group/{id}:
    get:
      tags:
        - Schedule Management
      summary: Get group schedule by ID
      description: Retrieve a specific group schedule by its ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Schedule ID
      responses:
        '200':
          description: Group schedule retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/GroupSchedule'
        '404':
          description: Schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Schedule Management
      summary: Update group schedule
      description: Update an existing group schedule (Admin only)
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Schedule ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateGroupScheduleRequest'
      responses:
        '200':
          description: Group schedule updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/GroupSchedule'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Schedule Management
      summary: Delete group schedule
      description: Delete a group schedule (Admin only)
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: Schedule ID
      responses:
        '200':
          description: Group schedule deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /schedule/semi-private:
    get:
      tags:
        - Schedule Management
      summary: Get all semi-private schedules
      description: Retrieve all semi-private schedules with pagination and search
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
          description: Number of items per page
        - name: search
          in: query
          schema:
            type: string
          description: Search by class name
        - name: date
          in: query
          schema:
            type: string
            format: date
          description: Filter by specific date
      responses:
        '200':
          description: Semi-private schedules retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Semi-private schedules retrieved successfully
                  data:
                    type: object
                    properties:
                      schedules:
                        type: array
                        items:
                          $ref: '#/components/schemas/GroupSchedule'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - Schedule Management
      summary: Create new semi-private schedule
      description: Create a new semi-private schedule (admin only)
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateSemiPrivateScheduleRequest'
      responses:
        '201':
          description: Semi-private schedule created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Semi-private schedule created successfully (14 schedules generated)
                  data:
                    type: object
                    properties:
                      schedule:
                        $ref: '#/components/schemas/GroupSchedule'
                      totalSchedules:
                        type: integer
                        example: 14
                      repeatType:
                        type: string
                        example: weekly
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /schedule/semi-private/{id}:
    get:
      tags:
        - Schedule Management
      summary: Get semi-private schedule by ID
      description: Retrieve a specific semi-private schedule by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Schedule ID
      responses:
        '200':
          description: Semi-private schedule retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Semi-private schedule retrieved successfully
                  data:
                    $ref: '#/components/schemas/GroupSchedule'
        '404':
          description: Schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Schedule Management
      summary: Update semi-private schedule
      description: Update an existing semi-private schedule (admin only)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Schedule ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateSemiPrivateScheduleRequest'
      responses:
        '200':
          description: Semi-private schedule updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Semi-private schedule updated successfully
                  data:
                    $ref: '#/components/schemas/GroupSchedule'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Schedule Management
      summary: Delete semi-private schedule
      description: Delete a semi-private schedule (admin only)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Schedule ID
      responses:
        '200':
          description: Semi-private schedule deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Semi-private schedule deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /schedule/private:
    get:
      tags:
        - Schedule Management
      summary: Get all private schedules
      description: Retrieve all private schedules with pagination and search
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
          description: Number of items per page
        - name: search
          in: query
          schema:
            type: string
          description: Search by class name
        - name: date
          in: query
          schema:
            type: string
            format: date
          description: Filter by specific date
      responses:
        '200':
          description: Private schedules retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Private schedules retrieved successfully
                  data:
                    type: object
                    properties:
                      schedules:
                        type: array
                        items:
                          $ref: '#/components/schemas/PrivateSchedule'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - Schedule Management
      summary: Create new private schedule with auto booking
      description: Create a new private schedule with automatic booking for assigned member (admin only)
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreatePrivateScheduleRequest'
      responses:
        '201':
          description: Private schedule created successfully with auto booking
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Private schedule created successfully (14 schedules generated)
                  data:
                    type: object
                    properties:
                      schedule:
                        $ref: '#/components/schemas/PrivateSchedule'
                      totalSchedules:
                        type: integer
                        example: 14
                      totalBookings:
                        type: integer
                        example: 14
                      repeatType:
                        type: string
                        example: weekly
                      assignedMember:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          full_name:
                            type: string
                          email:
                            type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /schedule/private/{id}:
    get:
      tags:
        - Schedule Management
      summary: Get private schedule by ID
      description: Retrieve a specific private schedule by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Schedule ID
      responses:
        '200':
          description: Private schedule retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Private schedule retrieved successfully
                  data:
                    $ref: '#/components/schemas/PrivateSchedule'
        '404':
          description: Schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Schedule Management
      summary: Update private schedule
      description: Update an existing private schedule (admin only)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Schedule ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdatePrivateScheduleRequest'
      responses:
        '200':
          description: Private schedule updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Private schedule updated successfully
                  data:
                    $ref: '#/components/schemas/PrivateSchedule'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Schedule Management
      summary: Delete private schedule
      description: Delete a private schedule and its associated bookings (admin only)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Schedule ID
      responses:
        '200':
          description: Private schedule deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Private schedule deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse' 

  /schedule/calendar:
    get:
      tags:
        - Schedule Management
      summary: Get schedule calendar data
      description: |
        Retrieve schedule data formatted for calendar display. Returns schedules with class details, 
        trainer information, booking counts, and availability status.
        
        **Features:**
        - Filter by month, year, and schedule type
        - Shows booking counts and available spots
        - Groups schedules by date for easy calendar rendering
        - Includes class colors, trainer details, and member assignments
        - Shows waiting list status
        
        **Default Values:**
        - Month: Current month (1-12)
        - Year: Current year
        - Type: All types (group, semi_private, private)
      security:
        - BearerAuth: []
      parameters:
        - name: month
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 12
            example: 7
          description: Month to display (1-12). Default is current month.
        - name: year
          in: query
          required: false
          schema:
            type: integer
            minimum: 2020
            maximum: 2100
            example: 2025
          description: Year to display. Default is current year.
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum: [group, semi_private, private]
            example: group
          description: Filter by schedule type. Default shows all types.
      responses:
        '200':
          description: Schedule calendar data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Schedule calendar data retrieved successfully"
                  data:
                    type: object
                    properties:
                      month:
                        type: integer
                        example: 7
                      year:
                        type: integer
                        example: 2025
                      filter_type:
                        type: string
                        example: "all"
                      total_schedules:
                        type: integer
                        example: 15
                      schedules_by_date:
                        type: object
                        description: "Schedules grouped by date for calendar rendering"
                        additionalProperties:
                          type: array
                          items:
                            $ref: '#/components/schemas/ScheduleCalendarItem'
                        example:
                          "2025-07-15":
                            - id: "schedule-uuid-1"
                              class_name: "Chair Basic"
                              class_color: "#4F46E5"
                              trainer_name: "Sarah Johnson"
                              type: "group"
                              time_start: "07:10"
                              time_end: "08:10"
                              pax: 10
                              booking_count: 8
                              available_spots: 2
                              is_full: false
                      schedules:
                        type: array
                        description: "Flat array of all schedules"
                        items:
                          $ref: '#/components/schemas/ScheduleCalendarItem'
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Token required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse' 

components:
  schemas:
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Operation successful"
        data:
          type: object
          nullable: true
      example:
        success: true
        message: "Operation successful"
        data: null

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Operation failed"
        data:
          type: object
          nullable: true
      example:
        success: false
        message: "Operation failed"
        data: null

    PaginationInfo:
      type: object
      properties:
        total:
          type: integer
          example: 100
        per_page:
          type: integer
          example: 10
        current_page:
          type: integer
          example: 1
        total_pages:
          type: integer
          example: 10
      example:
        total: 100
        per_page: 10
        current_page: 1
        total_pages: 10

    Pagination:
      type: object
      properties:
        total:
          type: integer
          example: 100
        per_page:
          type: integer
          example: 10
        current_page:
          type: integer
          example: 1
        total_pages:
          type: integer
          example: 10
      example:
        total: 100
        per_page: 10
        current_page: 1
        total_pages: 10

    GroupSchedule:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "6b8f4d2e-1a3c-4e8b-9d7f-2c5a8e1b4f9d"
        class_name:
          type: string
          example: "Chair Basic"
        class_color:
          type: string
          description: "Hex color code for calendar display"
          example: "#4F46E5"
        trainer_name:
          type: string
          example: "Sarah Johnson"
        trainer_picture:
          type: string
          nullable: true
          example: "trainer_photo_1.jpg"
        type:
          type: string
          enum: [group, semi_private, private]
          example: "group"
        date:
          type: string
          format: date
          example: "2025-07-15"
        time_start:
          type: string
          format: time
          example: "07:10"
        time_end:
          type: string
          format: time
          example: "08:10"
        pax:
          type: integer
          description: "Maximum capacity"
          example: 10
        booking_count:
          type: integer
          description: "Number of confirmed bookings"
          example: 8
        waiting_list_count:
          type: integer
          description: "Number of people on waiting list"
          example: 2
        available_spots:
          type: integer
          description: "Available spots remaining"
          example: 2
        is_full:
          type: boolean
          description: "Whether the schedule is at full capacity"
          example: false
        has_waiting_list:
          type: boolean
          description: "Whether there are people on waiting list"
          example: true
        assigned_member:
          type: object
          nullable: true
          description: "For private schedules only"
          properties:
            id:
              type: string
              format: uuid
              nullable: true
            name:
              type: string
              nullable: true
          example:
            id: "member-uuid-1"
            name: "John Doe"
        bookings:
          type: array
          description: "List of current bookings"
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              status:
                type: string
                enum: [signup, waiting_list, cancelled]
              member_name:
                type: string
            example:
              id: "booking-uuid-1"
              status: "signup"
              member_name: "John Doe"
        picture:
          type: string
          nullable: true
          description: "Schedule picture/banner"
          example: "schedule_banner_1.jpg"

    PrivateSchedule:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "6b8f4d2e-1a3c-4e8b-9d7f-2c5a8e1b4f9d"
        class_name:
          type: string
          example: "Chair Basic"
        class_color:
          type: string
          description: "Hex color code for calendar display"
          example: "#4F46E5"
        trainer_name:
          type: string
          example: "Sarah Johnson"
        trainer_picture:
          type: string
          nullable: true
          example: "trainer_photo_1.jpg"
        type:
          type: string
          enum: [group, semi_private, private]
          example: "private"
        date:
          type: string
          format: date
          example: "2025-07-15"
        time_start:
          type: string
          format: time
          example: "07:10"
        time_end:
          type: string
          format: time
          example: "08:10"
        pax:
          type: integer
          description: "Maximum capacity"
          example: 10
        booking_count:
          type: integer
          description: "Number of confirmed bookings"
          example: 8
        waiting_list_count:
          type: integer
          description: "Number of people on waiting list"
          example: 2
        available_spots:
          type: integer
          description: "Available spots remaining"
          example: 2
        is_full:
          type: boolean
          description: "Whether the schedule is at full capacity"
          example: false
        has_waiting_list:
          type: boolean
          description: "Whether there are people on waiting list"
          example: true
        assigned_member:
          type: object
          nullable: true
          description: "For private schedules only"
          properties:
            id:
              type: string
              format: uuid
              nullable: true
            name:
              type: string
              nullable: true
          example:
            id: "member-uuid-1"
            name: "John Doe"
        bookings:
          type: array
          description: "List of current bookings"
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              status:
                type: string
                enum: [signup, waiting_list, cancelled]
              member_name:
                type: string
            example:
              id: "booking-uuid-1"
              status: "signup"
              member_name: "John Doe"
        picture:
          type: string
          nullable: true
          description: "Schedule picture/banner"
          example: "schedule_banner_1.jpg"

    CreateGroupScheduleRequest:
      type: object
      required:
        - class_name
        - date
        - time_start
        - time_end
        - pax
        - type
      properties:
        class_name:
          type: string
          example: "Chair Basic"
        class_color:
          type: string
          description: "Hex color code for calendar display"
          example: "#4F46E5"
        trainer_name:
          type: string
          example: "Sarah Johnson"
        trainer_picture:
          type: string
          nullable: true
          example: "trainer_photo_1.jpg"
        type:
          type: string
          enum: [group, semi_private, private]
          example: "group"
        date:
          type: string
          format: date
          example: "2025-07-15"
        time_start:
          type: string
          format: time
          example: "07:10"
        time_end:
          type: string
          format: time
          example: "08:10"
        pax:
          type: integer
          description: "Maximum capacity"
          example: 10
        repeatType:
          type: string
          example: "weekly"
      example:
        class_name: "Chair Basic"
        class_color: "#4F46E5"
        trainer_name: "Sarah Johnson"
        trainer_picture: "trainer_photo_1.jpg"
        type: "group"
        date: "2025-07-15"
        time_start: "07:10"
        time_end: "08:10"
        pax: 10
        repeatType: "weekly"

    UpdateGroupScheduleRequest:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          example: "6b8f4d2e-1a3c-4e8b-9d7f-2c5a8e1b4f9d"
        class_name:
          type: string
          example: "Chair Basic"
        class_color:
          type: string
          description: "Hex color code for calendar display"
          example: "#4F46E5"
        trainer_name:
          type: string
          example: "Sarah Johnson"
        trainer_picture:
          type: string
          nullable: true
          example: "trainer_photo_1.jpg"
        type:
          type: string
          enum: [group, semi_private, private]
          example: "group"
        date:
          type: string
          format: date
          example: "2025-07-15"
        time_start:
          type: string
          format: time
          example: "07:10"
        time_end:
          type: string
          format: time
          example: "08:10"
        pax:
          type: integer
          description: "Maximum capacity"
          example: 10
        repeatType:
          type: string
          example: "weekly"
      example:
        id: "6b8f4d2e-1a3c-4e8b-9d7f-2c5a8e1b4f9d"
        class_name: "Chair Basic"
        class_color: "#4F46E5"
        trainer_name: "Sarah Johnson"
        trainer_picture: "trainer_photo_1.jpg"
        type: "group"
        date: "2025-07-15"
        time_start: "07:10"
        time_end: "08:10"
        pax: 10
        repeatType: "weekly"

    CreateSemiPrivateScheduleRequest:
      type: object
      required:
        - class_name
        - date
        - time_start
        - time_end
        - pax
        - type
      properties:
        class_name:
          type: string
          example: "Chair Basic"
        class_color:
          type: string
          description: "Hex color code for calendar display"
          example: "#4F46E5"
        trainer_name:
          type: string
          example: "Sarah Johnson"
        trainer_picture:
          type: string
          nullable: true
          example: "trainer_photo_1.jpg"
        type:
          type: string
          enum: [group, semi_private, private]
          example: "semi_private"
        date:
          type: string
          format: date
          example: "2025-07-15"
        time_start:
          type: string
          format: time
          example: "07:10"
        time_end:
          type: string
          format: time
          example: "08:10"
        pax:
          type: integer
          description: "Maximum capacity"
          example: 10
        repeatType:
          type: string
          example: "weekly"
      example:
        class_name: "Chair Basic"
        class_color: "#4F46E5"
        trainer_name: "Sarah Johnson"
        trainer_picture: "trainer_photo_1.jpg"
        type: "semi_private"
        date: "2025-07-15"
        time_start: "07:10"
        time_end: "08:10"
        pax: 10
        repeatType: "weekly"

    UpdateSemiPrivateScheduleRequest:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          example: "6b8f4d2e-1a3c-4e8b-9d7f-2c5a8e1b4f9d"
        class_name:
          type: string
          example: "Chair Basic"
        class_color:
          type: string
          description: "Hex color code for calendar display"
          example: "#4F46E5"
        trainer_name:
          type: string
          example: "Sarah Johnson"
        trainer_picture:
          type: string
          nullable: true
          example: "trainer_photo_1.jpg"
        type:
          type: string
          enum: [group, semi_private, private]
          example: "semi_private"
        date:
          type: string
          format: date
          example: "2025-07-15"
        time_start:
          type: string
          format: time
          example: "07:10"
        time_end:
          type: string
          format: time
          example: "08:10"
        pax:
          type: integer
          description: "Maximum capacity"
          example: 10
        repeatType:
          type: string
          example: "weekly"
      example:
        id: "6b8f4d2e-1a3c-4e8b-9d7f-2c5a8e1b4f9d"
        class_name: "Chair Basic"
        class_color: "#4F46E5"
        trainer_name: "Sarah Johnson"
        trainer_picture: "trainer_photo_1.jpg"
        type: "semi_private"
        date: "2025-07-15"
        time_start: "07:10"
        time_end: "08:10"
        pax: 10
        repeatType: "weekly"

    CreatePrivateScheduleRequest:
      type: object
      required:
        - class_name
        - date
        - time_start
        - time_end
        - pax
        - type
      properties:
        class_name:
          type: string
          example: "Chair Basic"
        class_color:
          type: string
          description: "Hex color code for calendar display"
          example: "#4F46E5"
        trainer_name:
          type: string
          example: "Sarah Johnson"
        trainer_picture:
          type: string
          nullable: true
          example: "trainer_photo_1.jpg"
        type:
          type: string
          enum: [group, semi_private, private]
          example: "private"
        date:
          type: string
          format: date
          example: "2025-07-15"
        time_start:
          type: string
          format: time
          example: "07:10"
        time_end:
          type: string
          format: time
          example: "08:10"
        pax:
          type: integer
          description: "Maximum capacity"
          example: 10
        repeatType:
          type: string
          example: "weekly"
        assignedMember:
          type: object
          required:
            - id
          properties:
            id:
              type: string
              format: uuid
            full_name:
              type: string
            email:
              type: string
          example:
            id: "member-uuid-1"
            full_name: "John Doe"
            email: "john.doe@example.com"
      example:
        class_name: "Chair Basic"
        class_color: "#4F46E5"
        trainer_name: "Sarah Johnson"
        trainer_picture: "trainer_photo_1.jpg"
        type: "private"
        date: "2025-07-15"
        time_start: "07:10"
        time_end: "08:10"
        pax: 10
        repeatType: "weekly"
        assignedMember:
          id: "member-uuid-1"
          full_name: "John Doe"
          email: "john.doe@example.com"

    UpdatePrivateScheduleRequest:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
          example: "6b8f4d2e-1a3c-4e8b-9d7f-2c5a8e1b4f9d"
        class_name:
          type: string
          example: "Chair Basic"
        class_color:
          type: string
          description: "Hex color code for calendar display"
          example: "#4F46E5"
        trainer_name:
          type: string
          example: "Sarah Johnson"
        trainer_picture:
          type: string
          nullable: true
          example: "trainer_photo_1.jpg"
        type:
          type: string
          enum: [group, semi_private, private]
          example: "private"
        date:
          type: string
          format: date
          example: "2025-07-15"
        time_start:
          type: string
          format: time
          example: "07:10"
        time_end:
          type: string
          format: time
          example: "08:10"
        pax:
          type: integer
          description: "Maximum capacity"
          example: 10
        repeatType:
          type: string
          example: "weekly"
        assignedMember:
          type: object
          nullable: true
          properties:
            id:
              type: string
              format: uuid
              nullable: true
            name:
              type: string
              nullable: true
          example:
            id: "member-uuid-1"
            name: "John Doe"
      example:
        id: "6b8f4d2e-1a3c-4e8b-9d7f-2c5a8e1b4f9d"
        class_name: "Chair Basic"
        class_color: "#4F46E5"
        trainer_name: "Sarah Johnson"
        trainer_picture: "trainer_photo_1.jpg"
        type: "private"
        date: "2025-07-15"
        time_start: "07:10"
        time_end: "08:10"
        pax: 10
        repeatType: "weekly"
        assignedMember:
          id: "member-uuid-1"
          name: "John Doe"

    ScheduleCalendarItem:
      type: object
      description: "Schedule item formatted for calendar display"
      properties:
        id:
          type: string
          format: uuid
          example: "6b8f4d2e-1a3c-4e8b-9d7f-2c5a8e1b4f9d"
        class_name:
          type: string
          example: "Chair Basic"
        class_color:
          type: string
          description: "Hex color code for calendar display"
          example: "#4F46E5"
        trainer_name:
          type: string
          example: "Sarah Johnson"
        trainer_picture:
          type: string
          nullable: true
          example: "trainer_photo_1.jpg"
        type:
          type: string
          enum: [group, semi_private, private]
          example: "group"
        date:
          type: string
          format: date
          example: "2025-07-15"
        time_start:
          type: string
          format: time
          example: "07:10"
        time_end:
          type: string
          format: time
          example: "08:10"
        pax:
          type: integer
          description: "Maximum capacity"
          example: 10
        booking_count:
          type: integer
          description: "Number of confirmed bookings"
          example: 8
        waiting_list_count:
          type: integer
          description: "Number of people on waiting list"
          example: 2
        available_spots:
          type: integer
          description: "Available spots remaining"
          example: 2
        is_full:
          type: boolean
          description: "Whether the schedule is at full capacity"
          example: false
        has_waiting_list:
          type: boolean
          description: "Whether there are people on waiting list"
          example: true
        assigned_member:
          type: object
          nullable: true
          description: "For private schedules only"
          properties:
            id:
              type: string
              format: uuid
              nullable: true
            name:
              type: string
              nullable: true
          example:
            id: "member-uuid-1"
            name: "John Doe"
        bookings:
          type: array
          description: "List of current bookings"
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              status:
                type: string
                enum: [signup, waiting_list, cancelled]
              member_name:
                type: string
            example:
              id: "booking-uuid-1"
              status: "signup"
              member_name: "John Doe"
        picture:
          type: string
          nullable: true
          description: "Schedule picture/banner"
          example: "schedule_banner_1.jpg" 