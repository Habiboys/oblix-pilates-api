# Order Management Endpoints

paths:
  /api/order/create:
    post:
      tags:
        - Order Management
      summary: Create new order
      description: Create a new order for package purchase with Midtrans integration
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrderResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Package not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/order/my-orders:
    get:
      tags:
        - Order Management
      summary: Get user orders
      description: Retrieve paginated list of user's orders
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: status
          in: query
          description: Filter by payment status
          required: false
          schema:
            type: string
            enum: [pending, paid, failed, expired, cancelled]
      responses:
        '200':
          description: Orders retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserOrdersResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/order/{id}:
    get:
      tags:
        - Order Management
      summary: Get order by ID
      description: Retrieve specific order details
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: Order ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Order retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderByIdResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/order/{order_id}/status:
    get:
      tags:
        - Order Management
      summary: Check payment status
      description: Check payment status from Midtrans and update order
      security:
        - bearerAuth: []
      parameters:
        - name: order_id
          in: path
          description: Order ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Payment status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckPaymentStatusResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/order/{order_id}/cancel:
    delete:
      tags:
        - Order Management
      summary: Cancel order
      description: Cancel pending order and Midtrans transaction
      security:
        - bearerAuth: []
      parameters:
        - name: order_id
          in: path
          description: Order ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Order cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelOrderResponse'
        '400':
          description: Order cannot be cancelled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/order/payment/notification:
    post:
      tags:
        - Payment Webhooks
      summary: Payment notification webhook
      description: Handle payment notifications from Midtrans
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentNotificationRequest'
      responses:
        '200':
          description: Payment notification processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentNotificationResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/order/payment/finish:
    get:
      tags:
        - Payment Callbacks
      summary: Payment finish callback
      description: Handle payment finish callback from Midtrans
      parameters:
        - name: order_id
          in: query
          description: Order ID from Midtrans
          required: true
          schema:
            type: string
        - name: result_code
          in: query
          description: Result code from Midtrans
          required: false
          schema:
            type: string
        - name: transaction_status
          in: query
          description: Transaction status from Midtrans
          required: false
          schema:
            type: string
      responses:
        '302':
          description: Redirect to frontend

  /api/order/payment/error:
    get:
      tags:
        - Payment Callbacks
      summary: Payment error callback
      description: Handle payment error callback from Midtrans
      parameters:
        - name: order_id
          in: query
          description: Order ID from Midtrans
          required: true
          schema:
            type: string
      responses:
        '302':
          description: Redirect to frontend

  /api/order/payment/pending:
    get:
      tags:
        - Payment Callbacks
      summary: Payment pending callback
      description: Handle payment pending callback from Midtrans
      parameters:
        - name: order_id
          in: query
          description: Order ID from Midtrans
          required: true
          schema:
            type: string
      responses:
        '302':
          description: Redirect to frontend

components:
  schemas:
    CreateOrderRequest:
      type: object
      required:
        - package_id
      properties:
        package_id:
          type: string
          format: uuid
          description: ID of the package to purchase
        quantity:
          type: integer
          minimum: 1
          maximum: 10
          default: 1
          description: Quantity of packages to purchase
        notes:
          type: string
          maxLength: 500
          description: Additional notes for the order

    CreateOrderResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Order created successfully
        data:
          type: object
          properties:
            order_id:
              type: string
              format: uuid
              description: Order ID
            order_number:
              type: string
              description: Order number
            total_amount:
              type: number
              description: Total amount
            payment_url:
              type: string
              format: uri
              description: Midtrans payment URL
            token:
              type: string
              description: Midtrans token for frontend integration

    GetUserOrdersResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Orders retrieved successfully
        data:
          type: object
          properties:
            orders:
              type: array
              items:
                $ref: '#/components/schemas/Order'
            pagination:
              $ref: '#/components/schemas/Pagination'

    GetOrderByIdResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Order retrieved successfully
        data:
          $ref: '#/components/schemas/OrderDetail'

    CheckPaymentStatusResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Payment status retrieved successfully
        data:
          type: object
          properties:
            order_id:
              type: string
              format: uuid
            order_number:
              type: string
            payment_status:
              type: string
              enum: [pending, paid, failed, expired, cancelled]
            midtrans_status:
              type: string
            fraud_status:
              type: string
            amount:
              type: number
            payment_type:
              type: string
            va_numbers:
              type: array
              items:
                type: object
                properties:
                  bank:
                    type: string
                  va_number:
                    type: string
            pdf_url:
              type: string
              format: uri

    CancelOrderResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Order cancelled successfully

    PaymentNotificationRequest:
      type: object
      required:
        - transaction_status
        - order_id
      properties:
        transaction_status:
          type: string
          description: Transaction status from Midtrans
        order_id:
          type: string
          description: Order ID from Midtrans
        transaction_id:
          type: string
          description: Transaction ID from Midtrans
        fraud_status:
          type: string
          description: Fraud status from Midtrans
        payment_type:
          type: string
          description: Payment type from Midtrans
        va_numbers:
          type: array
          items:
            type: object
            properties:
              bank:
                type: string
              va_number:
                type: string
        pdf_url:
          type: string
          format: uri
          description: PDF URL from Midtrans

    PaymentNotificationResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Payment notification processed successfully

    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
        order_number:
          type: string
        total_amount:
          type: number
        payment_status:
          type: string
          enum: [pending, paid, failed, expired, cancelled]
        package_name:
          type: string
        package_type:
          type: string
        quantity:
          type: integer
        unit_price:
          type: number
        session_count:
          type: integer
        duration_value:
          type: integer
        duration_unit:
          type: string
        created_at:
          type: string
          format: date-time
        package:
          $ref: '#/components/schemas/Package'

    OrderDetail:
      type: object
      properties:
        id:
          type: string
          format: uuid
        order_number:
          type: string
        total_amount:
          type: number
        payment_status:
          type: string
          enum: [pending, paid, failed, expired, cancelled]
        payment_method:
          type: string
        midtrans_order_id:
          type: string
        midtrans_payment_type:
          type: string
        midtrans_transaction_id:
          type: string
        midtrans_transaction_status:
          type: string
        midtrans_fraud_status:
          type: string
        midtrans_va_numbers:
          type: array
          items:
            type: object
            properties:
              bank:
                type: string
              va_number:
                type: string
        midtrans_pdf_url:
          type: string
          format: uri
        midtrans_redirect_url:
          type: string
          format: uri
        paid_at:
          type: string
          format: date-time
        expired_at:
          type: string
          format: date-time
        notes:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        package_name:
          type: string
        package_type:
          type: string
        quantity:
          type: integer
        unit_price:
          type: number
        session_count:
          type: integer
        duration_value:
          type: integer
        duration_unit:
          type: string
        package:
          $ref: '#/components/schemas/Package'
        member:
          $ref: '#/components/schemas/Member'
        member_package:
          $ref: '#/components/schemas/MemberPackage'



    Package:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
        price:
          type: number
        description:
          type: string

    Member:
      type: object
      properties:
        id:
          type: string
          format: uuid
        full_name:
          type: string
        email:
          type: string
        phone_number:
          type: string

    MemberPackage:
      type: object
      properties:
        id:
          type: string
          format: uuid
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        total_session:
          type: integer
        used_session:
          type: integer

    Pagination:
      type: object
      properties:
        currentPage:
          type: integer
        totalPages:
          type: integer
        totalItems:
          type: integer
        itemsPerPage:
          type: integer 