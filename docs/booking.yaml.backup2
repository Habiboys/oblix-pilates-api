paths:
  /api/booking:
    get:
      tags:
        - Booking Management
      summary: Get all bookings with pagination and filters
      description: Retrieve all bookings with optional filtering by member_id, schedule_id, and status
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
        - name: member_id
          in: query
          description: Filter by member ID
          required: false
          schema:
            type: string
            format: uuid
        - name: schedule_id
          in: query
          description: Filter by schedule ID
          required: false
          schema:
            type: string
            format: uuid
        - name: status
          in: query
          description: Filter by booking status
          required: false
          schema:
            type: string
            enum: [signup, waiting_list, cancelled]
      responses:
        '200':
          description: Bookings retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Bookings retrieved successfully
                  data:
                    type: object
                    properties:
                      bookings:
                        type: array
                        items:
                          $ref: '#/components/schemas/BookingResponse'
                      pagination:
                        $ref: '#/components/schemas/PaginationResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Booking Management
      summary: Create new booking
      description: Create a new booking for group or semi-private schedule. System will automatically validate session availability and select appropriate package.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - schedule_id
                - member_id
              properties:
                schedule_id:
                  type: string
                  format: uuid
                  description: ID of the schedule to book
                  example: "123e4567-e89b-12d3-a456-426614174000"
                member_id:
                  type: string
                  format: uuid
                  description: ID of the member making the booking
                  example: "123e4567-e89b-12d3-a456-426614174001"
              notes:
                  type: string
                  maxLength: 500
                  description: Optional notes for the booking
                  example: "Booking for group class"
      responses:
        '201':
          description: Booking created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Booking created successfully
                  data:
                    $ref: '#/components/schemas/BookingResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/booking/{id}:
    get:
      tags:
        - Booking Management
      summary: Get booking by ID
      description: Retrieve a specific booking by its ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the booking
          required: true
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174001"
      responses:
        '200':
          description: Booking retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Booking retrieved successfully
                  data:
                    $ref: '#/components/schemas/BookingResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Booking Management
      summary: Delete booking
      description: Delete a booking (Admin only)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the booking to delete
          required: true
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174001"
      responses:
        '200':
          description: Booking deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Booking deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/booking/{id}/status:
    patch:
      tags:
        - Booking Management
      summary: Update booking status
      description: Update the status of a booking (Admin only)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the booking
          required: true
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [signup, waiting_list, cancelled]
                  description: New status for the booking
                  example: "signup"
              notes:
                  type: string
                  maxLength: 500
                  description: Optional notes for the status change
                  example: "Status updated by admin"
      responses:
        '200':
          description: Booking status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Booking status updated successfully
                  data:
                    $ref: '#/components/schemas/BookingResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/booking/{id}/attendance:
    patch:
      tags:
        - Booking Management
      summary: Update booking attendance
      description: Update attendance status for a specific booking
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the booking
          required: true
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - attendance
              properties:
                attendance:
                  type: string
                  enum: [present, absent]
                  description: Attendance status
                  example: "present"
              notes:
                  type: string
                  maxLength: 500
                  description: Optional notes for the attendance
                  example: "Hadir tepat waktu"
      responses:
        '200':
          description: Attendance updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Attendance updated successfully
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        example: "123e4567-e89b-12d3-a456-426614174001"
                      attendance:
                        type: string
                        enum: [present, absent]
                        example: "present"
                    notes:
                        type: string
                        nullable: true
                        example: "Hadir tepat waktu"
                        updated_at:
                        type: string
                        format: date-time
                        example: "2025-07-15T07:00:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/booking/schedule/{schedule_id}/attendance:
    patch:
      tags:
        - Booking Management
      summary: Update attendance for all bookings in a schedule
      description: Update attendance status for all members who booked a specific schedule. Useful for bulk attendance marking.
      security:
        - BearerAuth: []
      parameters:
        - name: schedule_id
          in: path
          description: ID of the schedule
          required: true
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - attendances
              properties:
                attendances:
                  type: array
                  description: Array of attendance data for each booking
                  minItems: 1
                  items:
                    type: object
                    required:
                      - booking_id
                      - attendance
                    properties:
                      booking_id:
                        type: string
                        format: uuid
                        description: ID of the booking
                        example: "123e4567-e89b-12d3-a456-426614174001"
                      attendance:
                        type: string
                        enum: [present, absent]
                        description: Attendance status
                        example: "present"
                    notes:
                        type: string
                        maxLength: 500
                        description: Optional notes for the attendance
                        example: "Hadir tepat waktu"
      responses:
        '200':
          description: Schedule attendance updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Schedule attendance updated successfully
                  data:
                    type: object
                    properties:
                      schedule_id:
                        type: string
                        format: uuid
                        example: "123e4567-e89b-12d3-a456-426614174000"
                      schedule_info:
                        type: object
                        properties:
                          class_name:
                            type: string
                            example: "Pilates Basic"
                          trainer_name:
                            type: string
                            example: "Sarah Johnson"
                          date:
                            type: string
                            format: date
                            example: "2025-07-15"
                          time:
                            type: string
                            format: time
                            example: "07:00"
                      total_bookings:
                        type: integer
                        description: Total number of bookings updated
                        example: 5
                      updated_bookings:
                        type: array
                        description: List of updated bookings with attendance
                        items:
                          type: object
                          properties:
                            booking_id:
                              type: string
                              format: uuid
                              example: "123e4567-e89b-12d3-a456-426614174001"
                            member_id:
                              type: string
                              format: uuid
                              example: "123e4567-e89b-12d3-a456-426614174002"
                            member_name:
                              type: string
                              example: "John Doe"
                            attendance:
                              type: string
                              enum: [present, absent]
                              example: "present"
                          notes:
                              type: string
                              nullable: true
                              example: "Hadir tepat waktu"
                              updated_at:
                              type: string
                              format: date-time
                              example: "2025-07-15T07:00:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Schedule or bookings not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Schedule not found
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/booking/{id}/cancel:
    post:
      tags:
        - Booking Management
      summary: Cancel booking
      description: Cancel a booking (Member can cancel their own booking)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the booking to cancel
          required: true
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174001"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  maxLength: 500
                  description: Optional reason for cancellation
                  example: "Cannot attend due to emergency"
      responses:
        '200':
          description: Booking cancelled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Booking cancelled successfully
                  data:
                    $ref: '#/components/schemas/BookingResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/booking/{id}/admin-cancel:
    post:
      tags:
        - Booking Management
      summary: Admin cancel booking
      description: Allow admin to cancel a member's booking with optional reason
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the booking to cancel
          required: true
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174001"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  maxLength: 500
                  description: Optional reason for cancellation
                  example: "Member requested cancellation"
      responses:
        '200':
          description: Booking cancelled successfully by admin
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Booking cancelled successfully by admin
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        example: "123e4567-e89b-12d3-a456-426614174001"
                      status:
                        type: string
                        enum: [cancelled]
                        example: "cancelled"
                    notes:
                        type: string
                        example: "Admin cancelled: Member requested cancellation"
                      cancelled_at:
                        type: string
                        format: date-time
                        example: "2025-07-15T07:00:00Z"
        '400':
          description: Booking already cancelled
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Booking is already cancelled
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/booking/member/{member_id}/sessions:
    get:
      tags:
        - Booking Management
      summary: Get member session summary
      description: Get session summary for a specific member including available sessions across all packages
      security:
        - BearerAuth: []
      parameters:
        - name: member_id
          in: path
          description: ID of the member
          required: true
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174002"
      responses:
        '200':
          description: Member session summary retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Member session summary retrieved successfully
                  data:
                    $ref: '#/components/schemas/MemberSessionSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/booking/member/{member_id}/bookings:
    get:
      tags:
        - Booking Management
      summary: Get bookings by member ID
      description: Retrieve all bookings for a specific member with pagination
      security:
        - BearerAuth: []
      parameters:
        - name: member_id
          in: path
          description: ID of the member
          required: true
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174002"
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
        - name: status
          in: query
          description: Filter by booking status
          required: false
          schema:
            type: string
            enum: [signup, waiting_list, cancelled]
      responses:
        '200':
          description: Member bookings retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Member bookings retrieved successfully
                  data:
                    type: object
                    properties:
                      bookings:
                        type: array
                        items:
                          $ref: '#/components/schemas/BookingResponse'
                      pagination:
                        $ref: '#/components/schemas/PaginationResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/booking/admin/statistics:
    get:
      tags:
        - Booking Management
      summary: Get booking statistics
      description: Get booking statistics for admin dashboard
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Booking statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Booking statistics retrieved successfully
                  data:
                    type: object
                    properties:
                      total_bookings:
                        type: integer
                        description: Total number of bookings
                        example: 150
                      active_bookings:
                        type: integer
                        description: Number of active bookings
                        example: 120
                      cancelled_bookings:
                        type: integer
                        description: Number of cancelled bookings
                        example: 30
                      waitlist_bookings:
                        type: integer
                        description: Number of waitlist bookings
                        example: 15
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    BookingResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        schedule_id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174001"
        member_id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174002"
        package_id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174003"
        session_left:
          type: integer
          description: Number of sessions remaining in the package
          example: 4
        status:
          type: string
          enum: [signup, waiting_list, cancelled]
          example: "signup"
        attendance:
          type: string
          enum: [present, absent]
          description: Attendance status (default: present)
          example: "present"
        notes:
          type: string
          example: "Booking for group class"
        createdAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        Member:
          $ref: '#/components/schemas/MemberBasic'
        Schedule:
          $ref: '#/components/schemas/ScheduleBasic'
        Package:
          $ref: '#/components/schemas/PackageBasic'

    MemberBasic:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174002"
        full_name:
          type: string
          example: "John Doe"
        username:
          type: string
          example: "johndoe"
        member_code:
          type: string
          example: "MBR1234567890"

    ScheduleBasic:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174001"
        date_start:
          type: string
          format: date
          example: "2024-01-20"
        time_start:
          type: string
          example: "09:00:00"
        time_end:
          type: string
          example: "10:00:00"
        type:
          type: string
          enum: [group, semi_private, private]
          example: "group"
        Class:
          $ref: '#/components/schemas/ClassBasic'
        Trainer:
          $ref: '#/components/schemas/TrainerBasic'

    ClassBasic:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174004"
        class_name:
          type: string
          example: "Pilates Mat"
        color_sign:
          type: string
          example: "#FF5733"

    TrainerBasic:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174005"
        title:
          type: string
          example: "Senior Pilates Instructor"
        picture:
          type: string
          example: "trainer1.jpg"

    PackageBasic:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174003"
        name:
          type: string
          example: "Monthly Membership"
        type:
          type: string
          enum: [membership, first_trial, promo, bonus]
          example: "membership"

    MemberSessionSummary:
      type: object
      properties:
        member_id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174002"
        total_available_sessions:
          type: integer
          description: Total available sessions across all packages
          example: 12
        total_packages:
          type: integer
          description: Number of packages owned by member
          example: 3
        has_available_sessions:
          type: boolean
          description: Whether member has any available sessions
          example: true
        packages:
          type: array
          items:
            type: object
            properties:
              package_id:
                type: string
                format: uuid
                example: "123e4567-e89b-12d3-a456-426614174003"
              package_name:
                type: string
                example: "Monthly Membership"
              package_type:
                type: string
                enum: [membership, first_trial, promo, bonus]
                example: "membership"
              available_sessions:
                type: integer
                description: Number of sessions available in this package
                example: 8
              total_sessions:
                type: integer
                description: Total sessions in this package
                example: 12
              used_sessions:
                type: integer
                description: Number of sessions already used
                example: 4

    PaginationResponse:
      type: object
      properties:
        currentPage:
          type: integer
          example: 1
        totalPages:
          type: integer
          example: 5
        totalItems:
          type: integer
          example: 50
        itemsPerPage:
          type: integer
          example: 10 